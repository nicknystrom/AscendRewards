<viewdata id="string" model="ProductEditModel" />
<set entity="Model.Name" />

<style>

    .scaffold input[type="text"] { width: 300px; }
    .scaffold textarea { width: 300px; height: 100px; }
    .scaffold td > .ui-icon { margin-top: 7px; float: left; }
    .scaffold td > select { height: 30px; }

</style>

# using (Html.BeginForm(MVC.Admin.Product.Edit(id)))
# {

<div id="admin-edit-tabs">
    <ul>
        <li><a href="#admin-product-general">General</a></li>
    </ul>
    <div id="admin-product-general">
        <table class="scaffold">
            <tr>
                <td>${Html.LabelFor(x => x.Enabled)}</td>
                <td>
                    <span class="ui-icon ui-icon-key"></span>
                    ${Html.EditorFor(x => x.Locks.EnabledLocked)}
                </td>
                <td>${Html.EditorFor(x => x.Enabled)}</td>
                <td>${Html.ValidationMessageFor(x => x.Enabled)}</td>
            </tr>
            <tr>
                <td>${Html.LabelFor(x => x.Name)}</td>
                <td>
                    <span class="ui-icon ui-icon-key"></span>
                    ${Html.EditorFor(x => x.Locks.NameLocked)}
                </td>
                <td>
                    ${Html.EditorFor(x => x.Name)}
                </td>
                <td>${Html.ValidationMessageFor(x => x.Name)}</td>
            </tr>            
            <tr>
                <td>${Html.LabelFor(x => x.Category)}</td>
                <td>
                    <span class="ui-icon ui-icon-key"></span>
                    ${Html.EditorFor(x => x.Locks.CategoryLocked)}
                </td>
                <td>
                    ${Html.EditorFor(x => x.Category)}
                </td>
                <td>${Html.ValidationMessageFor(x => x.Category)}</td>
            </tr>             
            <tr>
                <td>${Html.LabelFor(x => x.Sku)}</td>
                <td>
                    <span class="ui-icon ui-icon-key"></span>
                    ${Html.EditorFor(x => x.Locks.SkuLocked)}
                </td>
                <td>
                    ${Html.EditorFor(x => x.Sku)}
                </td>
                <td>${Html.ValidationMessageFor(x => x.Sku)}</td>
            </tr>             
            <tr>
                <td>${Html.LabelFor(x => x.Manufacturer)}</td>
                <td>
                    <span class="ui-icon ui-icon-key"></span>
                    ${Html.EditorFor(x => x.Locks.ManufacturerLocked)}
                </td>
                <td>
                    ${Html.EditorFor(x => x.Manufacturer)}
                </td>
                <td>${Html.ValidationMessageFor(x => x.Manufacturer)}</td>
            </tr>             
            <tr>
                <td>${Html.LabelFor(x => x.Brand)}</td>
                <td>
                    <span class="ui-icon ui-icon-key"></span>
                    ${Html.EditorFor(x => x.Locks.BrandLocked)}
                </td>
                <td>
                    ${Html.EditorFor(x => x.Brand)}
                </td>
                <td>${Html.ValidationMessageFor(x => x.Brand)}</td>
            </tr>             
            <tr>
                <td>${Html.LabelFor(x => x.Description)}</td>
                <td>
                    <span class="ui-icon ui-icon-key"></span>
                    ${Html.EditorFor(x => x.Locks.DescriptionLocked)}
                </td>
                <td>
                    ${Html.EditorFor(x => x.Description)}
                </td>
                <td>${Html.ValidationMessageFor(x => x.Description)}</td>
            </tr>             
            <tr>
                <td>${Html.LabelFor(x => x.Details)}</td>
                <td>
                    <span class="ui-icon ui-icon-key"></span>
                    ${Html.EditorFor(x => x.Locks.DetailsLocked)}
                </td>
                <td>
                    ${Html.EditorFor(x => x.Details)}
                </td>
                <td>${Html.ValidationMessageFor(x => x.Details)}</td>
            </tr>             
            <tr>
                <td>${Html.LabelFor(x => x.Warranty)}</td>
                <td>
                    <span class="ui-icon ui-icon-key"></span>
                    ${Html.EditorFor(x => x.Locks.WarrantyLocked)}
                </td>
                <td>
                    ${Html.EditorFor(x => x.Warranty)}
                </td>
                <td>${Html.ValidationMessageFor(x => x.Warranty)}</td>
            </tr>             
            <tr>
                <td>${Html.LabelFor(x => x.CountryOfOrigin)}</td>
                <td>
                    <span class="ui-icon ui-icon-key"></span>
                    ${Html.EditorFor(x => x.Locks.CountryOfOriginLocked)}
                </td>
                <td>
                    ${Html.EditorFor(x => x.CountryOfOrigin)}
                </td>
                <td>${Html.ValidationMessageFor(x => x.CountryOfOrigin)}</td>
            </tr>    
        </table>
    </div>
</div>

# }

<content name="actions">
    <input type="submit" value="Update Product" />
    <ul>
        <li>
            <a href="${Url.Action(MVC.Site.Catalog.Product(Model.Id))}" target="_blank">View on Site</a>
        </li>
    </ul>
</content>

<script type="text/javascript">

$(function() {
    
    $('.scaffold input[type="text"], .scaffold textarea, .scaffold input[type="checkbox"]').keypress(function(e) {
        if (e.which > 0) {
            $(this).closest('td').prev('td').find('select').val('true');
        }
    });

});
        
</script>